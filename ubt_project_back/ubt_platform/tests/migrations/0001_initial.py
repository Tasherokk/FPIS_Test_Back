# Generated by Django 5.1.2 on 2024-10-30 12:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('SC', 'Single Choice'), ('MC', 'Multiple Choice'), ('MT', 'Matching')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('HIS', 'Тарих'), ('MAT', 'Математика'), ('PHY', 'Физика'), ('CHE', 'Химия'), ('RL', 'Оқу сауаттылығы'), ('ML', 'Математикалық сауаттылық'), ('WHI', 'Дүниежүзі тарихы'), ('GEO', 'География'), ('LF', 'Құқық негіздері'), ('FL', 'Шет тілі'), ('BIO', 'Биология'), ('KZ', 'Қазақ тілі'), ('KL', 'Қазақ әдебиеті'), ('INF', 'Информатика'), ('RU', 'Русский язык'), ('RUL', 'Русская литература')], max_length=3)),
                ('variant', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('iin', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^\\d{12}$', 'IIN must be 12 digits')], verbose_name='ИИН')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchingPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_side_1', models.TextField(blank=True, help_text='Первая неизменяемая левая часть', null=True)),
                ('left_side_2', models.TextField(blank=True, help_text='Вторая неизменяемая левая часть', null=True)),
                ('right_option_1', models.CharField(help_text='Первый вариант для выбора', max_length=200)),
                ('right_option_2', models.CharField(help_text='Второй вариант для выбора', max_length=200)),
                ('right_option_3', models.CharField(help_text='Третий вариант для выбора', max_length=200)),
                ('right_option_4', models.CharField(help_text='Четвёртый вариант для выбора', max_length=200)),
                ('correct_for_left_1', models.IntegerField(choices=[(1, 'Первый'), (2, 'Второй'), (3, 'Третий'), (4, 'Четвертый')])),
                ('correct_for_left_2', models.IntegerField(choices=[(1, 'Первый'), (2, 'Второй'), (3, 'Третий'), (4, 'Четвертый')])),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_pairs', to='tests.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tests.question')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.subject'),
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateTimeField(auto_now_add=True)),
                ('total_score', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.subject')),
                ('test_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_results', to='tests.testresult')),
            ],
        ),
    ]
